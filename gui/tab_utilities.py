import os
import tkinter as tk
try:
    import customtkinter as ctk
except ImportError:
    print("Error: CustomTkinter not found. Please install it using: pip install customtkinter")
    import sys
    sys.exit(1)
from tkinter import messagebox

from utils.github_handler import GitHubHandler

class UtilitiesTab:
    def __init__(self, parent):
        self.parent = parent
        self.github_handler = GitHubHandler()

        # === Utilities List Frame (–£–ª—É—á—à–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å) ===
        self.utilities_frame = ctk.CTkScrollableFrame(
            self.parent,
            fg_color="transparent" # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        )
        self.utilities_frame.pack(fill="both", expand=True, padx=10, pady=10) # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã

        self.setup_utilities_list()

    def setup_utilities_list(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–∏—Å–∫–∞ —É—Ç–∏–ª–∏—Ç"""
        utilities = [
            ("CPU-Z", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ –∏ —Å–∏—Å—Ç–µ–º–µ"),
            ("HWiNFO", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"),
            ("MSI Afterburner", "–†–∞–∑–≥–æ–Ω –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã"),
            ("CCleaner", "–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã"),
            ("CrystalDiskInfo", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∂–µ—Å—Ç–∫–∏—Ö –¥–∏—Å–∫–æ–≤"),
            ("MemTest64", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏"),
            ("FurMark", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã"),
            ("Rivatuner Statistics Server", "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ FPS –∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–≥—Ä–∞—Ö"),
            # –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —É—Ç–∏–ª–∏—Ç –∑–¥–µ—Å—å
        ]

        for name, description in utilities:
            # === Utility Frame (–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Ç–∏–ª–∏—Ç—ã) ===
            utility_frame = ctk.CTkFrame(
                self.utilities_frame,
                fg_color=("gray86", "gray17"), # –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω –≤ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º–µ, —Ç–µ–º–Ω—ã–π –≤ —Ç–µ–º–Ω–æ–π
                corner_radius=10,
                border_width=0 # –£–±–∏—Ä–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—É, —Ñ–æ–Ω –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —Ç–∞–∫ –≤—ã–¥–µ–ª—è–µ—Ç
            )
            utility_frame.pack(fill="x", padx=10, pady=5)
            utility_frame.bind("<Enter>", lambda event, frame=utility_frame: self.on_utility_hover(event, frame)) # Hover effect
            utility_frame.bind("<Leave>", lambda event, frame=utility_frame: self.on_utility_leave(event, frame)) # Hover effect

            # === Content Frame (–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ—Ä–µ–π–º –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞) ===
            content_frame = ctk.CTkFrame(
                utility_frame,
                fg_color="transparent"
            )
            content_frame.pack(fill="x", padx=15, pady=15) # –£–≤–µ–ª–∏—á–µ–Ω—ã –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã

            # === Icon Label (–ò–∫–æ–Ω–∫–∞ —É—Ç–∏–ª–∏—Ç—ã - placeholder) ===
            icon_label = ctk.CTkLabel(
                content_frame,
                text="üîß", # Placeholder –∏–∫–æ–Ω–∫–∞ - –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                font=("Arial", 30), # –£–≤–µ–ª–∏—á–µ–Ω —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏
                text_color=("gray50", "gray70") # –ë–æ–ª–µ–µ –±–ª–µ–∫–ª—ã–π —Ü–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
            )
            icon_label.pack(side="left", padx=(0, 15)) # –£–≤–µ–ª–∏—á–µ–Ω –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –æ—Ç –∏–∫–æ–Ω–∫–∏

            # === Text Frame (–§—Ä–µ–π–º –¥–ª—è —Ç–µ–∫—Å—Ç–∞ - –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ) ===
            text_frame = ctk.CTkFrame(
                content_frame,
                fg_color="transparent"
            )
            text_frame.pack(side="left", fill="x", expand=True)

            name_label = ctk.CTkLabel(
                text_frame,
                text=name,
                font=("Arial", 15, "bold") # –ß—É—Ç—å –±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä –Ω–∞–∑–≤–∞–Ω–∏—è
            )
            name_label.pack(anchor="w")

            desc_label = ctk.CTkLabel(
                text_frame,
                text=description,
                font=("Arial", 12),
                text_color=("gray50", "gray60") # –ë–ª–µ–∫–ª—ã–π —Ü–≤–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–±–µ–∏—Ö —Ç–µ–º
            )
            desc_label.pack(anchor="w")

            # === Action Button (–ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" / "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å") ===
            button_text = "–ó–∞–ø—É—Å—Ç–∏—Ç—å" if self.is_installed(name) else "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
            action_button = ctk.CTkButton(
                content_frame,
                text=button_text,
                command=lambda n=name: self.handle_utility(n),
                width=100,
                height=32,
                corner_radius=8 # –°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –∫–Ω–æ–ø–∫–∏
            )
            action_button.pack(side="right", padx=5)

    def is_installed(self, utility_name):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ —É—Ç–∏–ª–∏—Ç–∞ (–ø—Ä–∏–º–µ—Ä)"""
        # !!! –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.  –†–µ–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–µ–µ !!!
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ —É—Ç–∏–ª–∏—Ç—ã, –∑–∞–ø–∏—Å–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ, –∏ —Ç.–¥.
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –Ω–∞–ª–∏—á–∏—é —Ñ–∞–π–ª–∞ setup.exe –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫ - –Ω–µ–Ω–∞–¥–µ–∂–Ω–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
        return os.path.exists(os.path.join(self.github_handler.download_folder, f"{utility_name.lower()}_setup.exe"))

    def handle_utility(self, utility_name):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–ª–∏ –∑–∞–ø—É—Å–∫–∞ —É—Ç–∏–ª–∏—Ç—ã"""
        if self.is_installed(utility_name):
            self.launch_utility(utility_name)
        else:
            self.install_utility(utility_name)

    def install_utility(self, utility_name):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ç–∏–ª–∏—Ç—ã (–ø—Ä–∏–º–µ—Ä)"""
        github_url = f"https://github.com/example/{utility_name.lower()}" # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ URL
        filename = f"{utility_name.lower()}_setup.exe"

        downloaded_file = self.github_handler.download_release(github_url, filename)
        if downloaded_file:
            self.show_message(f"{utility_name} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
            self.update_utility_button(utility_name)
        else:
            self.show_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {utility_name}")

    def launch_utility(self, utility_name):
        """–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —É—Ç–∏–ª–∏—Ç—ã (–ø—Ä–∏–º–µ—Ä)"""
        try:
            file_path = os.path.join(self.github_handler.download_folder, f"{utility_name.lower()}_setup.exe") # !!! –ó–∞–ø—É—Å–∫ setup.exe - —ç—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä !!!
            if os.path.exists(file_path):
                if os.name == 'nt':  # Windows
                    os.startfile(file_path) # !!! –í –†–ï–ê–õ–¨–ù–û–ú –ü–†–ò–õ–û–ñ–ï–ù–ò–ò –ó–ê–ü–£–°–ö–ê–¢–¨ setup.exe –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û !!!
                    # –ù—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —Å–∞–º–æ–π —É—Ç–∏–ª–∏—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ Program Files –∏–ª–∏ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ.
                    # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å–∫–∞ —É—Ç–∏–ª–∏—Ç—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Ç–∏–ª–∏—Ç—ã –∏ —Å–ø–æ—Å–æ–±–∞ –µ–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.
                else:
                    self.show_message("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ Windows")
        except Exception as e:
            self.show_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ {utility_name}: {str(e)}")

    def update_utility_button(self, utility_name):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        for frame in self.utilities_frame.winfo_children():
            content_frame = frame.winfo_children()[0]
            text_frame = content_frame.winfo_children()[2]
            name_label = text_frame.winfo_children()[0]

            if name_label.cget("text") == utility_name:
                action_button = content_frame.winfo_children()[-1]
                action_button.configure(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å")
                break

    def show_message(self, message):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        messagebox.showinfo(
            title="–°–æ–æ–±—â–µ–Ω–∏–µ",
            message=message
        )

    def on_utility_hover(self, event, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –º—ã—à–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É —É—Ç–∏–ª–∏—Ç—ã"""
        frame.configure(border_width=2, border_color=("#56a6db", "#56a6db")) # –í—ã–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–º–∫–æ–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏

    def on_utility_leave(self, event, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Ö–æ–¥–∞ –º—ã—à–∏ —Å –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Ç–∏–ª–∏—Ç—ã"""
        frame.configure(border_width=0, border_color=("gray70", "gray30")) # –í–æ–∑–≤—Ä–∞—Ç –∫ –æ–±—ã—á–Ω–æ–º—É –≤–∏–¥—É

if __name__ == "__main__":
    app = ctk.CTk()
    app.title("Utilities Tab Example")
    app.geometry("800x700")

    utilities_tab = UtilitiesTab(app)

    app.mainloop()